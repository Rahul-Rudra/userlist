{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction InputComponent_ng_container_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"p\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage[\"required\"], \" \");\n  }\n}\n\nfunction InputComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputComponent_ng_container_4_div_1_Template, 3, 1, \"div\", 4);\n    i0.ɵɵpipe(2, \"keyvalue\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.controls.errors));\n  }\n}\n\nexport let InputComponent = /*#__PURE__*/(() => {\n  class InputComponent {\n    constructor() {\n      this.inputId = '';\n      this.controls = new FormControl();\n      this.label = \"\";\n      this.pla = '';\n      this.errorMessage = {\n        required: \"This field is required\"\n      };\n    }\n\n    ngOnChanges(changes) {\n      console.log(this.controls);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  InputComponent.ɵfac = function InputComponent_Factory(t) {\n    return new (t || InputComponent)();\n  };\n\n  InputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputComponent,\n    selectors: [[\"app-input\"]],\n    inputs: {\n      inputId: \"inputId\",\n      controls: \"controls\",\n      label: \"label\",\n      pla: \"pla\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 8,\n    consts: [[1, \"mb-3\"], [1, \"form-label\", \"fw-bold\", 3, \"for\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControl\", \"placeholder\", \"id\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"formError\", \"mt-1\"]],\n    template: function InputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵtemplate(4, InputComponent_ng_container_4_Template, 3, 3, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", ctx.inputId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"invalid\", ctx.controls.invalid && ctx.controls.dirty && ctx.controls.touched);\n        i0.ɵɵproperty(\"formControl\", ctx.controls)(\"placeholder\", ctx.pla)(\"id\", ctx.inputId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.controls.invalid && ctx.controls.dirty && ctx.controls.touched);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.NgIf, i2.NgForOf],\n    pipes: [i2.KeyValuePipe],\n    styles: [\".invalid[_ngcontent-%COMP%]{border:1px solid #CC0000}.formError[_ngcontent-%COMP%]{color:#c00}\"]\n  });\n  return InputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}